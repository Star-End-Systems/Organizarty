@using Organizarty.Application.App.Schedules.Entities;
@using Organizarty.Application.App.Schedules.Enum;
@using Organizarty.Application.App.Schedules.UseCases;
@using Organizarty.UI.Pages;
@using Organizarty.Application.App.Party.Enums;

@inject ChangeItemStatusUseCase ChangeItemStatus;
@inject NavigationManager NavigationManager;

  <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
    <thead class="text-lg text-black dark:bg-gray-700 dark:text-gray-400">
      <tr>
        <th scope="col" class="px-16 py-3 font-[Konnect] bordaPreta">Nome</th>
        <th scope="col" class="px-6 py-3 font-[Konnect]"> Quantidade </th>
        <th scope="col" class="px-6 py-3 font-[Konnect]"> Nota </th>
        <th scope="col" class="px-6 py-3 font-[Konnect]"> Status </th>
        <th scope="col" class="px-6 py-3 font-[Konnect]"> Ação </th>
      </tr>
    </thead>
    <tbody>
      @foreach(var order in Orders){
        <tr
          class="text-[#424242] bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 cursor-pointer"
          >
          <td class="px-6 py-4 font-semibold dark:text-white">
            <div class="flex items-center">
              <img src="/images/Clients/Products/BoloMorango.png" class="w-12 md:w-16 max-w-full max-h-full"
                alt="Apple Watch">
              <p class="pl-4 text-mg text-[#424242]">@order.name</p>
            </div>
          </td>
          <td class="px-6 py-4 flex items-center">@order.quantity x</td>
          <td class="px-6 py-4 font-semibold dark:text-white items-center">@order.note</td>
          <td class="px-6 py-4">
            <a href="#" class="font-medium hover:underline items-center">@order.Status.GetName()</a>
          </td>
          <td class="px-6 py-4 font-semibold dark:text-white items-center">
              <button @onclick="() => AcceptOrder(order)" disable="@IsLoading" class="font-medium text-green-600 dark:text-green-500 hover:underline">
                <img src="/images/ThirdParty/Accounts/aceitar.png" class="h-8" />
              </button>
              <button @onclick="() => RefuseOrder(order)" disable="@IsLoading" class="font-medium text-red-600 dark:text-red-500 hover:underline">
                 <img src="/images/ThirdParty/Accounts/negar.png" class="h-8" />
              </button>
          </td>
        </tr>
      }
    </tbody>
  </table>
@code{
  [Parameter]
  public List<ItemOrder> Orders {get; set;} = new();

  public bool IsLoading = false;

  public List<string> Errors = new();

  public async Task AcceptOrder(ItemOrder order){
      try{
        switch (order.type)
        {
            case ItemType.Decoration:
              await ChangeItemStatus.AcceptDecoration(order.id);
              break;
            case ItemType.Service:
              await ChangeItemStatus.AcceptService(order.id);
              break;
            case ItemType.Food:
              await ChangeItemStatus.AcceptFood(order.id);
              break;
        }

        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
      } catch(Exception e){
        Errors = new(){e.Message};
      } finally{
        IsLoading = true;
      }
  }

  public async Task RefuseOrder(ItemOrder order){
      try{
        switch (order.type)
        {
            case ItemType.Decoration:
              await ChangeItemStatus.RefuseDecoration(order.id);
              break;
            case ItemType.Service:
              await ChangeItemStatus.RefuseService(order.id);
              break;
            case ItemType.Food:
              await ChangeItemStatus.RefuseFood(order.id);
              break;
        }

        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
      } catch(Exception e){
        Errors = new(){e.Message};
      } finally{
        IsLoading = true;
      }
  }
}
