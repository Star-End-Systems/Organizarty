@using Organizarty.Application.App.Locations.Entities;
@using Organizarty.Application.App.Locations.UseCases;
@using Organizarty.Application.Exceptions;
@using Organizarty.Adapters;

@using Organizarty.UI.Blazor.Components.Utils.FlashCards;

@inject IImageUpload UploadImage
@inject NavigationManager NavigationManager
@inject NavigationManager NavigationManager
@inject CreateLocationUseCase CreateLocation

  <div class="absolute flex flex-col right-0 top-0 z-20 p-4 gap-y-4">
          
            @foreach(var err in Errors){
              <div @onclick="async () => await RemoveError(err)">
                <FlashCard Type="error" Body="@err" /> 
              </div>
            }
              </div>

<EditForm Model="@Input" OnSubmit="@Submit">
  <section class="h-screen w-5/6 ml-auto ">
    <div class="flex flex-col">
      <div class="flex">
        <div class="w-full ml-16">
          <p class="mt-16 font-[KonnectBold] text-4xl text-[#848484]">NOVO LOCAL</p>
          <div class="bg-[#FFC700] rounded-xl h-2 w-52"></div>
        </div>
      </div>
      <p class="ml-16 mt-3 font-[Inter] text-[#848484] text-xl">Preencha as informações abaixo para seus clientes
        poderem
        festejar em mais um local <br> espetacular!</p>
    </div>
    <div class="flex justify-between items-center">
      <div class="h-px w-full bg-[#C5BCBC]"></div>
      <h1 class="p-12 font-[Konnect] text-[#C6C6C6] text-2xl">Endereço</h1>
      <div class="h-px w-full bg-[#C5BCBC]"></div>
    </div>
          <div asp-validation-summary="ModelOnly" class=""></div>
    <div class="flex justify-center ">

      <div class="w-11/12 h-full flex ">
        <div class="w-1/2 flex flex-col justify-between">
          <h2 class="text-[#A09898] font-[Inter] font-bold">CEP: </h2>
          <input @bind="@Input.CEP"
            class="font-[KonnectBold] mb-8 w-5/6 h-12 rounded-2xl shadow-xl border-[#FFC700] form-control"
            aria-required="true" />
          <span asp-validation-for="@Input.CEP" class="placeholder"></span>

          <h2 class="text-[#A09898] font-[Inter] font-bold">Endereço: </h2>
          <input @bind="@Input.Address"
            class="font-[KonnectBold] mb-8 w-5/6 h-12 rounded-2xl shadow-xl border-[#FFC700] form-control"
            aria-required="true" />
          <span asp-validation-for="@Input.Address" class="placeholder"></span>

          <!-- <h2 class="text-[#A09898] font-[Inter] font-bold">Complemento: </h2> -->
          <!-- <input @bind="@Input.Complement" class="font-[KonnectBold] mb-16 w-5/6 h-12 rounded-2xl shadow-xl border-[#FFC700] form-control" aria-required="true"/> -->
          <!-- <span asp-validation-for="@Input.Complement" class="placeholder"></span> -->


        </div>
        <!-- <div class="w-1/2 flex flex-col"> -->
        <!--         <h2 class="text-[#A09898] font-[Inter] font-bold">Cidade: </h2> -->
        <!--         <input @bind="@Input.City" class="font-[KonnectBold] mb-8 w-5/6 h-12 rounded-2xl shadow-xl border-[#FFC700] form-control" aria-required="true"/> -->
        <!--         <span asp-validation-for="@Input.City" class="placeholder"></span> -->

        <!--         <h2 class="text-[#A09898] font-[Inter] font-bold">Número: </h2> -->
        <!--         <input @bind="@Input.Number" type="number" class="font-[KonnectBold] mb-8 w-5/6 h-12 rounded-2xl shadow-xl border-[#FFC700] form-control" aria-required="true"/> -->
        <!--         <span asp-validation-for="@Input.Number" class="placeholder"></span> -->

        <!--         <h2 class="text-[#A09898] font-[Inter] font-bold">Bairro: </h2> -->
        <!--         <input @bind="@Input.Neighbor" class="font-[KonnectBold] w-5/6 h-12 rounded-2xl shadow-xl border-[#FFC700] form-control" aria-required="true"/> -->
        <!--         <span asp-validation-for="@Input.Neighbor" class="placeholder"></span> -->
        <!-- </div> -->
      </div>
    </div>
  </section>
  <section class="h-screen w-5/6 ml-auto ">
    <div class="flex justify-between items-center">
      <div class="h-px w-full bg-[#C5BCBC]"></div>
      <h1 class="p-12 font-[Konnect] text-[#C6C6C6] text-2xl">Informações</h1>
      <div class="h-px w-full bg-[#C5BCBC]"></div>
    </div>
    <div class="flex">
     <div class="flex justify-end w-2/5 h-1/2 self-center pr-10 my-8">
        <label class="w-4/5 h-4/5">
          @if(ImageLoading){
            <div role="status" class="flex items-center justify-center h-56 max-w-sm bg-gray-300 rounded-lg animate-pulse dark:bg-gray-700">
                <svg class="w-10 h-10 text-gray-200 dark:text-gray-600" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 16 20">
                <path d="M5 5V.13a2.96 2.96 0 0 0-1.293.749L.879 3.707A2.98 2.98 0 0 0 .13 5H5Z"/>
                <path d="M14.066 0H7v5a2 2 0 0 1-2 2H0v11a1.97 1.97 0 0 0 1.934 2h12.132A1.97 1.97 0 0 0 16 18V2a1.97 1.97 0 0 0-1.934-2ZM9 13a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-2a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2Zm4 .382a1 1 0 0 1-1.447.894L10 13v-2l1.553-1.276a1 1 0 0 1 1.447.894v2.764Z"/>
            </svg>
                <span class="sr-only">Loading...</span>
            </div>
          } else {
            <img class="w-5/6 h-full border-2 border-solid border-[#FFC700] rounded-2xl shadow-2xl bg-white px-10 py-5" src="@Input.ImgUrl"/>
          }

          <InputFile class="hidden" OnChange="@OnInputFileChange" />
        </label>
      </div>
      <div class="w-1/2 flex flex-col justify-center">
        <h2 class="text-[#A09898] font-[Inter] font-bold">Nome: </h2>
        <input @bind="@Input.Name"
          class="font-[KonnectBold] mb-8 w-5/6 h-12 rounded-2xl shadow-xl border-[#FFC700] form-control"
          aria-required="true" />
        <span asp-validation-for="@Input.Name" class="placeholder"></span>

        <h2 class="text-[#A09898] font-[Inter] font-bold">Aluguel: </h2>
        <input @bind="@Input.RentPerDay" type="number"
          class="font-[KonnectBold] mb-8 w-5/6 h-12 rounded-2xl shadow-xl border-[#FFC700] form-control"
          aria-required="true" />
        <span asp-validation-for="@Input.RentPerDay" class="placeholder"></span>

        <h2 class="text-[#A09898] font-[Inter] font-bold">Categoria: </h2>
        <input @bind="@Input.Category"
          class="font-[KonnectBold] w-5/6 h-12 rounded-2xl shadow-xl border-[#FFC700] form-control"
          aria-required="true" />
        <span asp-validation-for="@Input.Category" class="placeholder"></span>

        <h2 class="text-[#A09898] font-[Inter] font-bold">Tamanho (M²)</h2>
        <input @bind="@Input.AreaSize"
          class="font-[KonnectBold] w-5/6 h-12 rounded-2xl shadow-xl border-[#FFC700] form-control"
          aria-required="true" />
        <span asp-validation-for="@Input.AreaSize" class="placeholder"></span>
      </div>
    </div>
    <div class="w-full flex">
      <div class="w-1/2 ml-24 mt-8">
        <p class="font-[KonnectBold] text-[#848484]">Descrição</p>
        <input @bind="@Input.Description"
          class="font-[KonnectBold] w-5/6 h-12 rounded-2xl shadow-xl border-[#FFC700] form-control"
          aria-required="true" />
        <span asp-validation-for="@Input.Description" class="placeholder"></span>

        <!-- <textarea class="TextArea w-96 h-32"> </textarea> -->
      </div>
      <div class="w-1/2 flex items-end justify-center">
        <div class="flex h-11">
          <button class="font-[Inter] text-[#FFC700] rounded-xl CancelButton pr-10 pl-10">Cancelar</button>
          <button type="submit"
            class="font-[Inter] text-white rounded-xl RegisterButton bg-[#FFC700] pr-10 pl-10 ml-8">Cadastrar</button>
        </div>
      </div>
    </div>
  </section>
</EditForm>

@code{
  public bool ImageLoading {get; set;} = false;

  public InputModel Input {get; set;} = new();

    public class InputModel
    {
        public string Name { get; set; } = default!;

        public string Description { get; set; } = default!;

        public double AreaSize { get; set; } = default!;

        public decimal RentPerDay { get; set; } = default!;

        public string CEP { get; set; } = default!;

        public string Category { get; set; } = default!;

        public string Address { get; set; } = default!;

        public string Cords { get; set; } = "";

        public string ImgUrl { get; set; } = "/images/Manager/CreatedParties/frebe_amarela.svg";
    }
      public async Task RemoveError(string err){
    await Task.Delay(3000);
    Errors.Remove(err);
  }


    public string ImgUrl {get; set;} = "";

    public List<string> Errors {get; set;} = new();

    public async Task Submit()
    {
       var data = new CreateLocationDto(Input.Name, Input.Description, Input.AreaSize, Input.RentPerDay, Input.CEP, Input.Category, Input.Address, Input.Cords, new() { Input.ImgUrl });
        try
        {
            var user = await CreateLocation.Execute(data);
             NavigationManager.NavigateTo("/Manager/Locations", forceLoad: true);

        }
        catch (ValidationFailException e)
        {
            Errors = new(){};

        Errors.AddRange(e.Errors.Select(x => x.message));
        } catch(Exception e){
                  Errors = new(){e.Message};

        }
         finally{
        }
    }

    public async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
       var file = e.File;
       if (file != null)
       {
            ImageLoading = true;

           using var memoryStream = new MemoryStream();
           await file.OpenReadStream().CopyToAsync(memoryStream);
           var byteArray = memoryStream.ToArray();
           try{
              Input.ImgUrl = await UploadImage.UploadImage("avatars", "assets", byteArray);

           } catch(Exception ex){
             Console.WriteLine(ex.ToString());
           } finally{
            ImageLoading = false;
           }
       }
   }
}
